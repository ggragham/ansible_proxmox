---
- name: Configure external storages
  block:
    - name: Make dirs for mountpoint
      file:
        path: '{{ mount_point_path }}'
        state: directory
        recurse: true
        mode: 0755
        owner: root
      loop:
        - '{{ DISK_PATH }}'
        - '{{ DISK_SUBVOLS_PATH }}'
      loop_control:
        loop_var: mount_point_path

    - name: Check encrypted disk existence
      shell: blkid -o value -s LABEL | grep -q '{{ DISK_ENCRYPTED_LABEL }}'
      register: encrypted_disk_exists
      ignore_errors: true
      when: DISK_ENCRYPTED|bool

    - name: Encrypted disk
      block:
        - name: Copy keyfile
          copy:
            src: '{{ DISK_KEYFILE_PATH }}'
            dest: /root/.{{ DISK_KEYFILE }}
            mode: 0400
        - name: Add disk to crypttab
          lineinfile:
            path: /etc/crypttab
            line: '{{ DISK_ENCRYPTED_LABEL }} LABEL={{ DISK_ENCRYPTED_LABEL }} /root/.{{ DISK_KEYFILE }} luks'
            state: present
        - name: Decrypt disks in cryptab
          command: cryptdisks_start '{{ DISK_ENCRYPTED_LABEL }}'
      when: DISK_ENCRYPTED|bool and encrypted_disk_exists.rc == 0

    - name: Check disk existence
      block:
        - name: Check ext4 disks existence
          shell: blkid -o value -s LABEL | grep -q '{{ disk_existence.name }}'
          loop: '{{ DISK_LIST }}'
          loop_control:
            loop_var: ext4_disk_existence
          register: disk_exists
          ignore_errors: true
          when:
            - DISK_FSTYPE == 'ext4'

    - name: Mount external disk with ext4
      mount:
        path: '{{ disks.mount_point }}'
        src: LABEL={{ disks.name }}
        fstype: ext4
        opts: defaults
        state: mounted
      loop: '{{ DISK_LIST }}'
      loop_control:
        loop_var: disks
      when:
        - DISK_FSTYPE == 'ext4'
        - disk_exists.results | default([]) | selectattr('skipped', 'eq', false) | selectattr('disk_existence.name', 'eq', disks.name) | list | length > 0


    - name: Mount external disk with btrfs
      mount:
        path: '{{ item.path }}'
        src: LABEL={{ DISK_BTRFS_LABEL }}
        fstype: btrfs
        opts: subvol={{ item.subvol }},compress={{ item.compression }},x-systemd.requires=cryptsetup.target
        state: mounted
      loop: '{{ DISK_SUBVOLS }}'
      loop_control:
        loop_var: item
      when:
        - DISK_FSTYPE == 'btrfs'
        - disk_exists.results | selectattr('rc', 'eq', 0) | selectattr('disk_existence.name', 'eq', disks.name) | list | length > 0

    - name: Add disks to Proxmox
      block:
        - name: Add BTRFS storage
          shell: >-
            pvesm add btrfs {{ DISK_BTRFS_LABEL }}
            --path {{ DISK_SUBVOLS | selectattr('name', 'equalto', 'pve_storage') | map(attribute='path') | first }}
          register: result
          failed_when: result.rc != 0

  when: EXT_DISK_ENABLED|bool
  become: true
  tags: storage
