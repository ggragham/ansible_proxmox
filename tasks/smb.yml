---
- name: Install and configure Samba
  block:
    - name: Install Samba
      apt:
        name: samba
        state: latest
      become: true

    - name: Create smb group
      group:
        name: '{{ SMB_GROUP }}'
        state: present
      become: true

    - name: Create smb user
      user:
        name: '{{ SMB_USER }}'
        group: '{{ SMB_GROUP }}'
        # password: "{{ SMB_PASSWORD | password_hash('sha512') }}"
        create_home: false
        shell: /usr/sbin/nologin
        state: present
      become: true

    - name: Apply smb config
      template:
        src: '{{ templates_path }}/smb_config.conf.j2'
        dest: /etc/samba/smb.conf
        mode: 0644
      notify: Restart Samba
      become: true

    - name: Restart Samba
      meta: flush_handlers

    - name: Check if Samba user exists
      command: 'pdbedit -L -w | cut -d: -f1 | grep -w {{ SMB_USER }}'
      register: samba_user_exist
      ignore_errors: true
      changed_when: false

    - name: Add user to Samba
      command: smbpasswd -a {{ SMB_USER }}
      args:
        stdin: "{{ SMB_PASSWORD }}\n{{ SMB_PASSWORD }}"
      when: samba_user_exist.rc != 0
      no_log: true
      become: true

    - name: Enable Samba user
      command: smbpasswd -e {{ SMB_USER }}
      when: samba_user_exist.rc != 0
      become: true

    - name: Set smb creds
      template:
        src: '{{ templates_path }}/smb_creds.j2'
        dest: /root/.smbcreds
        mode: 0400
      become: true

    - name: Create dirs for Samba mount
      file:
        path: '{{ smb_storage_path.mount_point }}'
        state: directory
        recurse: true
        owner: '{{ SMB_USER }}'
        group: '{{ SMB_GROUP }}'
        mode: 0770
      loop: '{{ SMB_SHARE }}'
      loop_control:
        loop_var: smb_storage_path
      become: true

    - name: Mount Samba shares
      mount:
        path: '{{ smb_mount_point.mount_point }}'
        src: //localhost/{{ smb_mount_point.name }}
        fstype: cifs
        opts: credentials=/root/.smbcreds,x-systemd.automount,iocharset=utf8,rw,vers=3{{ ',' + smb_mount_point.mount_options if smb_mount_point.mount_options is defined and smb_mount_point.mount_options | length > 0 else '' }}
        state: mounted
      loop: '{{ SMB_SHARE }}'
      loop_control:
        loop_var: smb_mount_point
      become: true

  tags: smb
